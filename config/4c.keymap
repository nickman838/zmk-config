/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        btMo {
            bindings = <&mo 3>;
            key-positions = <56 57>;
        };

        new_combo {
            bindings = <&mo 4>;
            key-positions = <48 49>;
        };
    };

    macros {
        codeFence: codeFence {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&kp GRAVE &kp GRAVE &kp GRAVE &kp RET &kp RET &kp GRAVE &kp GRAVE &kp GRAVE &kp UP>,
                <&macro_press>;
        };
        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            label = "ALT_F4";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp F4>;
        };
        comment: comment {
            compatible = "zmk,behavior-macro";
            label = "COMMENT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp K &kp C>;
        };
        uncomment: uncomment {
            compatible = "zmk,behavior-macro";
            label = "UNCOMMENT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp K &kp C>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
     &kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8   &kp NUMBER_9  &kp NUMBER_0          &kp ESC
       &kp TAB         &kp Q         &kp W         &kp E          &kp R         &kp T           &kp Y         &kp U         &kp I          &kp O         &kp P          &kp DEL
&kp LEFT_SHIFT         &kp A         &kp S         &kp D          &kp F         &kp G           &kp H         &kp J         &kp K          &kp L      &kp SEMI         &kp APOS
     &kp LCTRL         &kp Z         &kp X         &kp C          &kp V         &kp B           &kp N         &kp M     &kp COMMA     &kp PERIOD     &kp SLASH  &kp RIGHT_SHIFT
         &mo 1     &kp SPACE     &kp ENTER  &kp LEFT_WIN  &kp BACKSPACE                                   &kp ENTER     &kp SPACE  &kp BACKSPACE     &kp SPACE            &mo 2
            >;
        };

        RSE {
            bindings = <
     &kp GRAVE           &trans  &kp ESCAPE        &trans          &trans       &trans       &trans          &trans        &trans             &kp MINUS              &kp EQUAL  &kp DELETE
       &kp TAB  &kp EXCLAMATION      &kp AT      &kp HASH      &kp DOLLAR  &kp PERCENT    &kp CARET   &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp DEL
&kp LEFT_SHIFT           &kp F1      &kp F2        &kp F3          &kp F4       &kp F5       &kp F6  &kp UNDERSCORE      &kp PLUS        &kp LEFT_BRACE        &kp RIGHT_BRACE    &kp PIPE
     &kp LCTRL           &kp F7      &kp F8        &kp F9         &kp F10      &kp F11      &kp F12          &trans  &kp C_VOL_DN          &kp C_VOL_UP                 &trans      &trans
        &trans     &kp LEFT_ALT   &kp SPACE  &kp LEFT_GUI  &kp LEFT_SHIFT                                 &kp SPACE  &kp LEFT_GUI        &kp LEFT_SHIFT                 &trans      &trans
            >;
        };

        LWR {
            bindings = <
       &kp F12          &kp F1          &kp F2           &kp F3          &kp F4  &kp F5    &kp F6     &kp F7        &kp F8            &kp F9            &kp F10        &kp F11
       &kp TAB          &trans    &kp UP_ARROW           &trans          &trans  &trans    &trans     &trans        &trans            &trans             &trans         &trans
&kp LEFT_SHIFT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW          &trans  &trans    &trans  &kp MINUS     &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
     &kp LCTRL          &trans          &trans           &trans          &trans  &trans    &trans     &trans  &kp C_VOL_DN      &kp C_VOL_UP             &trans         &trans
        &trans    &kp LEFT_ALT       &kp SPACE     &kp LEFT_GUI  &kp LEFT_SHIFT                    &kp SPACE  &kp LEFT_GUI    &kp LEFT_SHIFT             &trans         &trans
            >;
        };

        BT {
            bindings = <
&trans  &trans  &trans       &trans  &alt_f4  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans       &trans   &trans  &trans          &trans        &trans        &trans        &trans        &trans      &trans
&trans  &trans  &trans       &trans   &trans  &trans          &trans        &trans        &trans        &trans        &trans      &trans
&trans  &trans  &trans       &trans   &trans  &trans          &trans        &trans        &trans        &trans        &trans      &trans
&trans  &trans  &trans  &bootloader   &trans                                &trans    &sys_reset        &trans        &trans      &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans      &trans    &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans    &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &uncomment  &comment  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans    &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans    &trans                    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
